import { PlayerStats } from "../definitions";

export function playerStats(buf: Buffer): PlayerStats {
	return {
		strength: buf.readUInt32LE(0x00),
		dexterity: buf.readUInt32LE(0x04),
		vitality: buf.readUInt32LE(0x08),
		intelligence: buf.readUInt32LE(0x0c),
		mind: buf.readUInt32LE(0x10),
		piety: buf.readUInt32LE(0x14),
		hp: buf.readUInt32LE(0x18),
		mp: buf.readUInt32LE(0x1c),
		tp: buf.readUInt32LE(0x20),
		gp: buf.readUInt32LE(0x24),
		cp: buf.readUInt32LE(0x28),
		delay: buf.readUInt32LE(0x2c),
		tenacity: buf.readUInt32LE(0x30),
		attackPower: buf.readUInt32LE(0x34),
		defense: buf.readUInt32LE(0x38),
		directHitRate: buf.readUInt32LE(0x3c),
		evasion: buf.readUInt32LE(0x40),
		magicDefense: buf.readUInt32LE(0x44),
		criticalHit: buf.readUInt32LE(0x48),
		attackMagicPotency: buf.readUInt32LE(0x4c),
		healingMagicPotency: buf.readUInt32LE(0x50),
		elementalBonus: buf.readUInt32LE(0x54),
		determination: buf.readUInt32LE(0x58),
		skillSpeed: buf.readUInt32LE(0x5c),
		spellSpeed: buf.readUInt32LE(0x60),
		haste: buf.readUInt32LE(0x64),
		craftsmanship: buf.readUInt32LE(0x68),
		control: buf.readUInt32LE(0x6c),
		gathering: buf.readUInt32LE(0x70),
		perception: buf.readUInt32LE(0x74),
		unknown: Array.from(new Uint32Array(buf.slice(0x78, 0x78 + 32 * 26))),
	};
}
